{
  "self-hosted-parser": {
    "description": "walk std lib, parse, iterate nodes",
    "kind": "zig-bench",
    "dir": "self-hosted-parser",
    "mainPath": "main.zig"
  },
  "zig-fmt": {
    "description": "run zig fmt on the std lib",
    "kind": "zig-bench",
    "dir": "self-hosted-parser",
    "mainPath": "zigfmt-main.zig"
  },
  "translate-c-windows-h": {
    "description": "translate-c windows.h",
    "kind": "zig-bench",
    "dir": "translate-c",
    "mainPath": "main.zig"
  },
  "arena-allocator": {
    "description": "general-purpose usage of std.heap.ArenaAllocator",
    "kind": "zig-bench",
    "dir": "arena-allocator",
    "mainPath": "main.zig"
  },
  "std-rand": {
    "description": "random number generation",
    "kind": "zig-bench",
    "dir": "rand",
    "mainPath": "main.zig"
  },
  "std-hash-map": {
    "description": "std.AutoHashMap - Project Euler 14",
    "kind": "zig-bench",
    "dir": "std-hash-map",
    "mainPath": "project-euler-14-main.zig"
  },
  "insert-10M-int": {
    "description": "std.AutoHashMap - Insert 10M int",
    "kind": "zig-bench",
    "dir": "std-hash-map",
    "mainPath": "insert-10M-int.zig"
  },
  "random-distinct": {
    "description": "std.AutoHashMap - Random distinct",
    "kind": "zig-bench",
    "dir": "std-hash-map",
    "mainPath": "random-distinct.zig"
  },
  "random-find": {
    "description": "std.AutoHashMap - Random find",
    "kind": "zig-bench",
    "dir": "std-hash-map",
    "mainPath": "random-find.zig"
  },
  "ast-check-os": {
    "description": "run ast-check on std.os",
    "kind": "zig-bench",
    "dir": "ast-check",
    "mainPath": "astcheck-os.zig"
  },
  "ast-check-AstGen": {
    "description": "run ast-check on AstGen.zig",
    "kind": "zig-bench",
    "dir": "ast-check",
    "mainPath": "astcheck-self.zig"
  },
  "ast-check-Sema": {
    "description": "run ast-check on Sema.zig",
    "kind": "zig-bench",
    "dir": "ast-check",
    "mainPath": "astcheck-sema.zig"
  },
  "build-tetris-llvm-x86_64-linux-gnu": {
    "description": "Compile a simple Tetris game with the LLVM backend in ReleaseFast mode for x86_64-linux-gnu",
    "kind": "zig-bench",
    "dir": "tetris",
    "mainPath": "main.zig"
  },
  "build-hello-world-x86_64-linux": {
    "description": "Compile a simple Hello World program with the x86_64 backend in Debug mode for Linux",
    "kind": "zig-bench",
    "dir": "hello-world",
    "mainPath": "main-x86_64-linux.zig"
  },
  "build-hello-world-aarch64-linux": {
    "description": "Compile a simple Hello World program with the aarch64 backend in Debug mode for Linux",
    "kind": "zig-bench",
    "dir": "hello-world",
    "mainPath": "main-aarch64-linux.zig"
  }
  "comptime-guid-parse": {
    "description": "Parse a GUID at comptime",
    "kind": "zig-bench",
    "dir": "guid",
    "mainPath": "comptime-guid-parse-bench.zig"
  }
}
